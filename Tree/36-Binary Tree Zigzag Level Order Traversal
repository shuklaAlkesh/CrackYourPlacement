/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> result;
        if (root == nullptr) return result; 
        queue<TreeNode*>q;
        q.push(root);

        int flag = 1;
        while(!q.empty()){
            int n = q.size();
            vector<int>nums;
            
            while(n--){
                TreeNode* curr = q.front();
                q.pop();
                nums.push_back(curr->val);
                
                if(curr->left != NULL){
                    q.push(curr->left);
                }
                if(curr->right != NULL){
                    q.push(curr->right);
                }
            }
            
            if(flag == 1){
                result.push_back(nums);
                flag = 0;
            }else{
                reverse(nums.begin(),nums.end());
                result.push_back(nums);
                flag = 1;
            }
        }
        return result;
    }
};