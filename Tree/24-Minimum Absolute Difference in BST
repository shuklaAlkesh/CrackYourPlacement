/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void Inorder(TreeNode* root,vector<int>& nums){
        if(root == NULL){
            return;
        }
        Inorder(root->left,nums);
        nums.push_back(root->val);
        Inorder(root->right,nums);
    }
    int getMinimumDifference(TreeNode* root) {
        vector<int>nums;
        Inorder(root,nums);

        int minimum =  INT_MAX;
        for(int i = 0;i < nums.size()-1;i++){
            minimum = min(minimum,nums[i+1] - nums[i]);
        }
        return minimum;
    }
};