/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void preorder(TreeNode* root,vector<int>& nums){
        if(root == NULL){
            return;
        }
        nums.push_back(root->val);
        preorder(root->left,nums);
        preorder(root->right,nums);
    }
    void flatten(TreeNode* root) {
        vector<int>nums;
        preorder(root,nums);
        TreeNode* temp = root;
        for(int i=1;i<nums.size();i++){
            if(temp == NULL){
                temp = new TreeNode(nums[i]);
            }else{
                temp->left = NULL;
                temp->right = new TreeNode(nums[i]);
                temp = temp->right;
            }
        }
    }
};