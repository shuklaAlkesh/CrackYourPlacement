/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* partition(ListNode* head, int x) {
        if(head == NULL || head->next == NULL){
            return head;
        }
        ListNode* temp = head;

        ListNode* small = new ListNode(-1);
        ListNode* large = new ListNode(-1);
        ListNode* curr1 = small;
        ListNode* curr2 = large;
        while(temp != NULL){
            if(temp->val < x){
                curr1->next = new ListNode(temp->val);
                curr1 = curr1->next;
            }else{
                curr2->next = new ListNode(temp->val);
                curr2 = curr2->next;
            }
            temp = temp->next;
        }

        curr1->next = large->next;
        return small->next;
    
    }
};