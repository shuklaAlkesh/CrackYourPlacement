/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    typedef unsigned long long ll;
    ll count = 0;
    vector<int>nums;

    void dfs(TreeNode* root,int targetSum,ll CurrSum){
        if(root == NULL){
            return;
        }
        CurrSum += root->val;
        if(CurrSum == targetSum){
            count++;
        }
        dfs(root->left,targetSum,CurrSum);
        dfs(root->right,targetSum,CurrSum);
    }
    
    int pathSum(TreeNode* root, int targetSum) {
        // getSum(root,targetSum);
        if(root == NULL){
            return 0;
        }
        dfs(root,targetSum,0);
        pathSum(root->left,targetSum);
        pathSum(root->right,targetSum);

        return count;
    }
};