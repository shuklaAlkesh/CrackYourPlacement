/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */


class compareNode {
public:
    bool operator()(ListNode* a, ListNode* b) const {
        return a->val > b->val;
    }
};

class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        priority_queue<ListNode*, vector<ListNode*>, compareNode> pq;
        
        // Push the head of each list into the priority queue
        for(ListNode* list : lists){
            if(list){
                pq.push(list);
            }
        }
        
        ListNode dummy(0);
        ListNode* tail = &dummy;
        
        while(!pq.empty()){
            ListNode* node = pq.top();
            pq.pop();
            
            if(node->next){
                pq.push(node->next);
            }
            tail->next = node;
            tail = tail->next;
        }
        
        return dummy.next;
    }
};