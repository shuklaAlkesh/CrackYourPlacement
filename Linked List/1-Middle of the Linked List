/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    // First Approach
    ListNode* middleNode(ListNode* head) {
        ListNode* slow = head;
        ListNode* fast = head;
        
       while(fast != NULL && fast->next != NULL){
        slow = slow->next;
        fast = fast->next->next;
       }
       return slow;
    }
    
    // Second Approach
    // ListNode* middleNode(ListNode* head) {
    //     if(head ==  nullptr) return nullptr;
    //     ListNode* temp = head;
    //     int cnt = 0;
    //     while(temp != NULL){
    //         cnt++;
    //         temp = temp->next;
    //     }
    //     ListNode* newhead = head;
    //     int mid= cnt/2;
    //     cnt = 0;
    //     while(cnt < mid){
    //         newhead = newhead->next;
    //         cnt++;
    //     }
    //     return newhead;
        
    // }
};