class Solution{
  public:
    // nums: given vector
    // return the Product vector P that hold product except self at each index
    vector<long long int> productExceptSelf(vector<long long int>& nums, int n) {
       
        vector<long long int> p(n,1);
        long long int product = 1;
        long long int zerocnt = 0;
        for(int i=0;i<n;i++){ // time complexity is O(n)
            if(nums[i] != 0){
                product *= nums[i];
            }else{
                zerocnt++;
            }
        }
        
        for(int i=0;i<n;i++){ // time complexity is O(n)
            if (zerocnt > 1) {
                p[i] = 0;
            } else if (zerocnt == 1) {
                if (nums[i] == 0) {
                    p[i] = product;
                } else {
                    p[i] = 0;
                }
            } else {
                p[i] = product / nums[i];
            }
        }
        return p;
    }
};