class Solution {
public:
    int calculate(string s) {
        // First Approach
        int len = s.length();
        char operation='+';
        stack<int> st;
        int currentNumber = 0;
        for(int i=0;i<len;i++){
            char currentChar = s[i];
            if(isdigit(currentChar)){
                currentNumber = currentNumber*10 + (currentChar-'0');
            }

            if(!isdigit(currentChar) && currentChar != ' ' || i == len-1){
                if(operation == '-'){
                    st.push(-1*currentNumber);
                }else if(operation == '+'){
                    st.push(currentNumber);
                }else if(operation == '*'){
                    int stackTop = st.top();
                    st.pop();
                    st.push(stackTop*currentNumber);
                }else{
                    int stackTop = st.top();
                    st.pop();
                    st.push(stackTop/currentNumber);
                }

                operation = currentChar;
                currentNumber = 0;
            }
        }
        int ans = 0;
        while(!st.empty()){
            ans += st.top();
            st.pop();
        }
        return ans;
    }
};