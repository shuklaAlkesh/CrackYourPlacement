//{ Driver Code Starts
// Initial template for C++

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
// User function template in C++
class Solution {
  public:
  
    // Function to find minimum number of pages.
    bool solve(int arr[],int n,long long mid,int m){
        int sum = 0;
        int student = 1;
        for(int i=0;i<n;i++){
            if(arr[i] > mid) return false;
            if(sum + arr[i] > mid){
                student++;
                sum = arr[i];
                if(student > m) return false;
            }else{
                sum += arr[i];
            }
        }
        return true;
    }
    long long findPages(int n, int arr[], int m) {
        if (n < m) return -1;
        
        long long lb = 0;
        long long ub = 0;
        for(int i=0;i<n;i++){
            ub += arr[i];
        }
        
        long long ans;
        while(lb <= ub){
            long long mid = (lb + ub)/2;
            if(solve(arr,n,mid,m)){
                ans = mid;
                ub = mid - 1;
            }else{
                lb = mid + 1;
            }
        }
        return ans;
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        int A[n];
        for (int i = 0; i < n; i++) {
            cin >> A[i];
        }
        int m;
        cin >> m;
        Solution ob;
        cout << ob.findPages(n, A, m) << endl;
    }
    return 0;
}

// } Driver Code Ends